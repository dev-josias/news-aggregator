services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: news
      POSTGRES_USER: news
      POSTGRES_PASSWORD: news
    volumes: [dbdata:/var/lib/postgresql/data]
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U news -d news"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    ports: ["6379:6379"]

  api:
    build: ./backend
    image: news-backend:dev
    env_file: ./backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/var/www/html
      - vendor:/var/www/html/vendor
    command: sh -c "php artisan migrate --force && php-fpm"

  web:
    image: nginx:alpine
    volumes:
      - ./backend:/var/www/html
      - ./backend/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on: [api]
    ports: ["9000:80"]

  queue:
    image: news-backend:dev
    command: >
      sh -c '
        until php artisan migrate:status >/dev/null 2>&1; do
          echo "queue: waiting for migrations...";
          sleep 3;
        done;
        php artisan queue:work --tries=3 --timeout=120
      '
    env_file: ./backend/.env
    depends_on:
      api:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/var/www/html
      - vendor:/var/www/html/vendor
    restart: unless-stopped

  scheduler:
    image: news-backend:dev
    command: >
      sh -c '
        until php artisan migrate:status >/dev/null 2>&1; do
          echo "scheduler: waiting for migrations...";
          sleep 3;
        done;
        while :; do
          php artisan schedule:run;
          sleep 60;
        done
      '
    env_file: ./backend/.env
    depends_on: [api, db, redis]
    volumes:
      - ./backend:/var/www/html
      - vendor:/var/www/html/vendor

  frontend:
    image: node:20
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm ci && npm run dev -- --host 0.0.0.0 --port 5173"
    ports: ["5173:5173"]
    depends_on: [api]
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
volumes:
  dbdata:
  vendor:
